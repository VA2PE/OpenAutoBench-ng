stages:
  - .pre
  - build
  - test
  - release
  - deploy

create-release:
  stage: .pre
  script:
    - export DATE=$(date)
    - export GIT_SHORTHASH=$(git rev-parse --short HEAD)
    - export PAYLOAD="{\"tag_name\":\"$GIT_SHORTHASH\",\"target_commitish\":\"master\",\"name\":\"Release $GIT_SHORTHASH\",\"body\":\"This release has been auto-generated by GitLab on $DATE.\",\"draft\":false,\"prerelease\":true,\"generate_release_notes\":false}"
#    - "curl -X POST -H \"Accept: application/vnd.github+json\" -H \"Authorization: Bearer $GH_API_TOKEN\" https://api.github.com/repos/jelimoore/OpenAutoBench-ng/releases -d \"$PAYLOAD\""

build-windows-dbg:
  stage: build
  script:
    - dotnet build -c Debug
#    - Invoke-WebRequest -UseBasicParsing -H @{"Accept"= "application/vnd.github+json"; "Authorization"= "Bearer $GH_API_TOKEN"} https://api.github.com/repos/jelimoore/OpenAutoBench-ng/releases | ConvertFrom-Json -outvariable GhJson
#    - $relId = $GhJson[0][0].id
    - Compress-Archive -Path OpenAutoBench-ng/bin/Debug/net6.0/ -DestinationPath Windows-debug.zip 
    - "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls -bor [Net.SecurityProtocolType]::Tls11 -bor [Net.SecurityProtocolType]::Tls12"
#    - Invoke-WebRequest -UseBasicParsing -H @{"Accept"= "application/vnd.github+json"; "Authorization"= "Bearer $GH_API_TOKEN"} https://uploads.github.com/repos/jelimoore/OpenAutoBench-ng/releases/$relId/assets?name=Windows-debug.zip -Method Post -Infile .\Windows-debug.zip -ContentType 'application/octet-stream'
  artifacts:
    name: debug-windows
    public: false
    expire_in: 2 days
    paths:
      - 'OpenAutoBench-ng/bin/Debug/net6.0/*'
  tags:
    - windows
    - shell

test-windows-dbg:
  stage: test
  script:
    - dotnet build -c Debug
    - dotnet test -c Debug
  tags:
    - windows
    - shell

build-release-windows-x64:
  stage: release
  script:
    - dotnet publish -r win-x64 -c Release
  artifacts:
    name: release-windows-x64
    public: false
    expire_in: 2 days
    paths:
      - 'OpenAutoBench-ng/bin/Release/net6.0/win-x64/publish'
  tags:
    - windows
    - shell

build-release-windows-x86:
  stage: release
  script:
    - dotnet publish -r win-x86 -c Release
  artifacts:
    name: release-windows-x86
    public: false
    expire_in: 2 days
    paths:
      - 'OpenAutoBench-ng/bin/Release/net6.0/win-x86/publish'
  tags:
    - windows
    - shell

build-release-windows-arm64:
  stage: release
  script:
    - dotnet publish -r win-arm64 -c Release
  artifacts:
    name: release-windows-arm64
    public: false
    expire_in: 2 days
    paths:
      - 'OpenAutoBench-ng/bin/Release/net6.0/win-arm64/publish'
  tags:
    - windows
    - shell

test-macos-dbg:
  stage: test
  script:
    - dotnet build -c Debug
    - dotnet test -c Debug
  tags:
    - macos
    - shell

build-macos-dbg:
  stage: build
  script:
    - dotnet build -c Debug
  artifacts:
    name: debug-macos
    public: false
    expire_in: 2 days
    paths:
      - 'OpenAutoBench-ng/bin/Debug/net6.0/*'
  tags:
    - macos
    - shell

build-release-macos-x64:
  stage: release
  script:
    - dotnet publish -r osx-x64 -c Release
    - cd OpenAutoBench-ng/bin/Release/net6.0/osx-x64/publish
    - "echo ${ENTITLEMENTS_DATA} > entitlements.plist"
    - "codesign --force --verbose --timestamp --sign \"${APPLE_CERT_NAME}\" --options=runtime --entitlements entitlements.plist OpenAutoBench-ng"
    - ditto -c --sequesterRsrc -k -V OpenAutoBench-ng application.zip
    - "xcrun notarytool submit application.zip --wait --apple-id ${NOTARIZATION_APPLE_ID} --password ${NOTARIZATION_PASSWORD} --team-id ${TEAM_ID} --output-format json"

  artifacts:
    name: release-macos-x64
    public: false
    expire_in: 2 days
    paths:
      - 'OpenAutoBench-ng/bin/Release/net6.0/osx-x64/publish'
  tags:
    - macos
    - shell

build-release-macos-arm64:
  stage: release
  script:
    - dotnet publish -r osx-arm64 -c Release
    - cd OpenAutoBench-ng/bin/Release/net6.0/osx-arm64/publish
    - "echo ${ENTITLEMENTS_DATA} > entitlements.plist"
    - cat entitlements.plist
    - "codesign --force --verbose --timestamp --sign \"${APPLE_CERT_NAME}\" --options=runtime --entitlements entitlements.plist OpenAutoBench-ng"
    - ditto -c --sequesterRsrc -k -V OpenAutoBench-ng application.zip
    - "xcrun notarytool submit application.zip --wait --apple-id \"${NOTARIZATION_APPLE_ID}\" --password \"${NOTARIZATION_PASSWORD}\ --team-id ${TEAM_ID} --output-format json"
  artifacts:
    name: release-macos-arm64
    public: false
    expire_in: 2 days
    paths:
      - 'OpenAutoBench-ng/bin/Release/net6.0/osx-arm64/publish'
  tags:
    - macos
    - shell

build-linux-dbg:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - dotnet build -c Debug
  artifacts:
    name: debug-linux
    public: false
    expire_in: 2 days
    paths:
      - 'OpenAutoBench-ng/bin/Debug/net6.0/*'
  tags:
    - linux
    - x64
    - docker

test-linux-dbg:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - dotnet build -c Debug
    - dotnet test -c Debug
  tags:
    - linux
    - x64
    - docker

build-release-linux-x64:
  stage: release
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - dotnet publish -r linux-x64 -c Release
  artifacts:
    name: release-linux-x64
    public: false
    expire_in: 2 days
    paths:
      - 'OpenAutoBench-ng/bin/Release/net6.0/linux-x64/publish'
  tags:
    - linux
    - x64
    - docker

build-release-linux-arm64:
  stage: release
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - dotnet publish -r linux-arm64 -c Release
  artifacts:
    name: release-linux-arm64
    public: false
    expire_in: 2 days
    paths:
      - 'OpenAutoBench-ng/bin/Release/net6.0/linux-arm64/publish'
  tags:
    - linux
    - x64
    - docker

build-release-linux-arm:
  stage: release
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - dotnet publish -r linux-arm -c Release
  artifacts:
    name: release-linux-arm
    public: false
    expire_in: 2 days
    paths:
      - 'OpenAutoBench-ng/bin/Release/net6.0/linux-arm/publish'
  tags:
    - linux
    - x64
    - docker

deploy-to-s3:
  stage: deploy
  image: alpine:latest
  script:
    - apk add --update --no-cache python3 zip
    - python3 -m ensurepip
    - pip3 install awscli
    - cd OpenAutoBench-ng/bin/Release/net6.0/
    - ls
    - zip -r windows-x64.zip win-x64/publish
    - zip -r windows-x86.zip win-x86/publish
    - zip -r windows-arm64.zip win-arm64/publish
    - zip -r macos-x64.zip osx-x64/publish
    - zip -r macos-arm64.zip osx-arm64/publish
    - zip -r linux-x64.zip linux-x64/publish
    - zip -r linux-arm64.zip linux-arm64/publish
    - zip -r linux-arm.zip linux-arm/publish
    - aws s3 cp . s3://openautoben.ch/files --exclude "*" --include "*.zip" --recursive
  dependencies:
    - "build-release-windows-x86"
    - "build-release-windows-x64"
    - "build-release-windows-arm64"
    - "build-release-macos-x64"
    - "build-release-macos-arm64"
    - "build-release-linux-x64"
    - "build-release-linux-arm64"
    - "build-release-linux-arm"
  tags:
    - linux
    - x64
    - docker